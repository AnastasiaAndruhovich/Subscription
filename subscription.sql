-- MySQL Script generated by MySQL Workbench
-- Sun Feb 11 17:39:09 2018
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
-- -----------------------------------------------------
-- Schema subscription
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `subscription` ;

-- -----------------------------------------------------
-- Schema subscription
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `subscription` DEFAULT CHARACTER SET utf8 ;
USE `subscription` ;

-- -----------------------------------------------------
-- Table `subscription`.`accounts`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `subscription`.`accounts` ;

CREATE TABLE IF NOT EXISTS `subscription`.`accounts` (
  `account_number` INT(10) NOT NULL AUTO_INCREMENT,
  `balance` DECIMAL(5,2) UNSIGNED NOT NULL DEFAULT '0.00',
  `loan` DECIMAL(5,2) UNSIGNED NOT NULL DEFAULT '0.00',
  PRIMARY KEY (`account_number`))
ENGINE = InnoDB
AUTO_INCREMENT = 34
DEFAULT CHARACTER SET = utf8
COMMENT = 'Описывает счета пользователей. Содержит уникальный номер счета, баланс и кредит. Столбец кредит хранит долг, если пользователь делал обещанный платеж.';


-- -----------------------------------------------------
-- Table `subscription`.`authors`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `subscription`.`authors` ;

CREATE TABLE IF NOT EXISTS `subscription`.`authors` (
  `author_id` INT(11) NOT NULL AUTO_INCREMENT,
  `publisher_name` VARCHAR(30) NOT NULL,
  `author_lastname` VARCHAR(30) NULL DEFAULT NULL,
  `author_firstname` VARCHAR(30) NULL DEFAULT NULL,
  PRIMARY KEY (`author_id`),
  UNIQUE INDEX `authors_publisher_name_author_lastname_author_firstname_uindex` (`publisher_name` ASC, `author_lastname` ASC, `author_firstname` ASC))
ENGINE = InnoDB
AUTO_INCREMENT = 46
DEFAULT CHARACTER SET = utf8
COMMENT = 'Описывает издателя и автора(если есть). Содержит имя издателя, имя и фамилию автора(если есть).Автора может не быть, например, у газеты. Зато и у газеты, и у книги есть издатель.';


-- -----------------------------------------------------
-- Table `subscription`.`genres`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `subscription`.`genres` ;

CREATE TABLE IF NOT EXISTS `subscription`.`genres` (
  `genre_id` INT(11) NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(30) NOT NULL,
  `description` TEXT NULL DEFAULT NULL,
  PRIMARY KEY (`genre_id`),
  UNIQUE INDEX `name_UNIQUE` (`name` ASC))
ENGINE = InnoDB
AUTO_INCREMENT = 32
DEFAULT CHARACTER SET = utf8
COMMENT = 'Описывает жанры. Содержит имя и описание жанра(если есть). Вынесено в отдельную таблицу:\n1) является справочником (характеристикой любого произведения)\n2)  расширяемость';


-- -----------------------------------------------------
-- Table `subscription`.`publication_types`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `subscription`.`publication_types` ;

CREATE TABLE IF NOT EXISTS `subscription`.`publication_types` (
  `publication_type_id` INT(11) NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(30) NOT NULL,
  PRIMARY KEY (`publication_type_id`),
  UNIQUE INDEX `rype_name_UNIQUE` (`name` ASC))
ENGINE = InnoDB
AUTO_INCREMENT = 76
DEFAULT CHARACTER SET = utf8
COMMENT = 'Описывает типы изданий (журнал, газета, серия книг и т.д.). Связь 1 к 1, т.к.:\n1) является справочником (есть у каждого издания)\n2) расширяемость\n3) не надо использовать константы\n3) используется в связи многие ко многим';


-- -----------------------------------------------------
-- Table `subscription`.`publications`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `subscription`.`publications` ;

CREATE TABLE IF NOT EXISTS `subscription`.`publications` (
  `publication_id` INT(11) NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(50) NOT NULL,
  `publication_type_id` INT(11) NOT NULL,
  `genre_id` INT(11) NOT NULL,
  `description` TEXT NULL DEFAULT NULL,
  `price` DECIMAL(5,2) NOT NULL,
  `picture_name` VARCHAR(50) NULL DEFAULT NULL,
  `picture` LONGBLOB NULL DEFAULT NULL,
  PRIMARY KEY (`publication_id`),
  INDEX `publication_type_id_idx` (`publication_type_id` ASC),
  INDEX `genre_id_idx` (`genre_id` ASC),
  CONSTRAINT `genre_id`
    FOREIGN KEY (`genre_id`)
    REFERENCES `subscription`.`genres` (`genre_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `publication_type_id`
    FOREIGN KEY (`publication_type_id`)
    REFERENCES `subscription`.`publication_types` (`publication_type_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
AUTO_INCREMENT = 80
DEFAULT CHARACTER SET = utf8
COMMENT = 'Описывает издания. Содержит имя, тип (газета, книга и т.д.), жанр и описание (аннотация - если есть) и цену подписки.';


-- -----------------------------------------------------
-- Table `subscription`.`authors_publications`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `subscription`.`authors_publications` ;

CREATE TABLE IF NOT EXISTS `subscription`.`authors_publications` (
  `author_id` INT(11) NOT NULL,
  `publication_id` INT(11) NOT NULL,
  PRIMARY KEY (`author_id`, `publication_id`),
  INDEX `authors_publications_ibfk_2` (`publication_id` ASC),
  CONSTRAINT `authors_publications_ibfk_1`
    FOREIGN KEY (`author_id`)
    REFERENCES `subscription`.`authors` (`author_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `authors_publications_ibfk_2`
    FOREIGN KEY (`publication_id`)
    REFERENCES `subscription`.`publications` (`publication_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8
COMMENT = 'Связь многие ко многим. У автора может быть несколько изданий и у издания может быть несколько авторов.';


-- -----------------------------------------------------
-- Table `subscription`.`roles`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `subscription`.`roles` ;

CREATE TABLE IF NOT EXISTS `subscription`.`roles` (
  `role_id` INT(11) NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(30) NOT NULL,
  PRIMARY KEY (`role_id`),
  UNIQUE INDEX `name_UNIQUE` (`name` ASC))
ENGINE = InnoDB
AUTO_INCREMENT = 3
DEFAULT CHARACTER SET = utf8
COMMENT = 'Описывает роли пользователей (администратор, пользователь и т.д.).Связь 1 к 1. Вынесено в отдельную таблицу, т.к. \n1) расширение функционала (может понадобится добаление характеристик)\n2) четкое ограничение набора  ролей (отпадает необходимость вносить константы)';


-- -----------------------------------------------------
-- Table `subscription`.`users`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `subscription`.`users` ;

CREATE TABLE IF NOT EXISTS `subscription`.`users` (
  `user_id` INT(11) NOT NULL AUTO_INCREMENT,
  `role_id` INT(11) NOT NULL,
  `lastname` VARCHAR(30) NOT NULL,
  `firstname` VARCHAR(30) NOT NULL,
  `birthdate` DATE NOT NULL,
  `address` VARCHAR(30) NOT NULL,
  `city` VARCHAR(30) NOT NULL,
  `postal_index` INT(10) UNSIGNED NOT NULL,
  `account_number` INT(10) NOT NULL,
  `login` VARCHAR(30) NOT NULL,
  `password` VARCHAR(100) NOT NULL,
  PRIMARY KEY (`user_id`),
  UNIQUE INDEX `login_UNIQUE` (`login` ASC),
  INDEX `role_id_idx` (`role_id` ASC),
  INDEX `account_number_idx` (`account_number` ASC),
  CONSTRAINT `account_number`
    FOREIGN KEY (`account_number`)
    REFERENCES `subscription`.`accounts` (`account_number`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `role_id`
    FOREIGN KEY (`role_id`)
    REFERENCES `subscription`.`roles` (`role_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
AUTO_INCREMENT = 25
DEFAULT CHARACTER SET = utf8
COMMENT = 'Описывает информацию о пользователе. Содержит роль, имя и фамилию, дату рождения, адрес, город, почтовый индес, номер счета, логин и пароль. Столбец с датой рождения является типом date, т.к. время в данном случае является избыточной характеристикой. Логин является уникальной характеристикой.';


-- -----------------------------------------------------
-- Table `subscription`.`block`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `subscription`.`block` ;

CREATE TABLE IF NOT EXISTS `subscription`.`block` (
  `user_id` INT(11) NOT NULL,
  `admin_id` INT(11) NOT NULL,
  `date` DATETIME NOT NULL,
  PRIMARY KEY (`user_id`, `admin_id`),
  INDEX `block_ibfk_2` (`admin_id` ASC),
  CONSTRAINT `block_ibfk_1`
    FOREIGN KEY (`user_id`)
    REFERENCES `subscription`.`users` (`user_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `block_ibfk_2`
    FOREIGN KEY (`admin_id`)
    REFERENCES `subscription`.`users` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8
COMMENT = 'Таблица содержит информацию о заблокированных пользователях: id пользователя, id администратора (который заблокировал), дата блокировки. При разблокировании пользователя его строка удаляется из таблицы. Пользователь блокируется при наличии большой суммы кредита и ее непогашения в течении месяца. Администратор сам устанавливает порог кредита.';


-- -----------------------------------------------------
-- Table `subscription`.`subscriptions`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `subscription`.`subscriptions` ;

CREATE TABLE IF NOT EXISTS `subscription`.`subscriptions` (
  `subscription_id` INT(11) NOT NULL AUTO_INCREMENT,
  `user_id` INT(11) NOT NULL,
  `publication_id` INT(11) NOT NULL,
  `start_date` DATE NOT NULL,
  `end_date` DATE NOT NULL,
  `subscription_is_active` VARCHAR(2) NOT NULL COMMENT 'y - если подписка активна, n - если срок подписки истек.',
  PRIMARY KEY (`subscription_id`),
  INDEX `user_id_idx` (`user_id` ASC),
  INDEX `publication_id_idx` (`publication_id` ASC),
  CONSTRAINT `publication_id`
    FOREIGN KEY (`publication_id`)
    REFERENCES `subscription`.`publications` (`publication_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `user_id`
    FOREIGN KEY (`user_id`)
    REFERENCES `subscription`.`users` (`user_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
AUTO_INCREMENT = 56
DEFAULT CHARACTER SET = utf8
COMMENT = 'Описывает подписки (факт подписки и отписки от издания). Подписка содержит информацию о пользователе, издание (предмет подписки), даты начала и окончания подписки(тип date, т.к. время избыточно)  и флаг активности подписки. (y - подписка активна, n - нет). Если не вносить сюда id пользователя, а делать наоборот - id подписки внести в информацию о пользователе, то получится, что у пользователя иожет быть только одна подписка - что неверно.';


-- -----------------------------------------------------
-- Table `subscription`.`payments`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `subscription`.`payments` ;

CREATE TABLE IF NOT EXISTS `subscription`.`payments` (
  `payment_number` INT(11) NOT NULL AUTO_INCREMENT,
  `subscription_id` INT(11) NOT NULL,
  `sum` DECIMAL(5,2) NOT NULL,
  `date` DATETIME NOT NULL,
  `statement` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`payment_number`),
  INDEX `subscription_id_idx` (`subscription_id` ASC),
  CONSTRAINT `subscription_id`
    FOREIGN KEY (`subscription_id`)
    REFERENCES `subscription`.`subscriptions` (`subscription_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
AUTO_INCREMENT = 5
DEFAULT CHARACTER SET = utf8
COMMENT = 'Содеждит информацию о платеже пользователя: информация о пользователе, подписка, сумма платежа, дата и время и состояние (y - платеж прошел, n - платеж не выполнился).';


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
